CREATE TABLE SafeData (
    id INT AUTO_INCREMENT PRIMARY KEY,
    Metier2 VARCHAR(255),
    SafeName VARCHAR(255),
    BAM_ID INT,
    AppName VARCHAR(255),
    Instance VARCHAR(255),
    AppStatus VARCHAR(255),
    EntitlementOwnerUID VARCHAR(255),
    EntitlementOwnerName VARCHAR(255),
    EntitlementOwnerMetier VARCHAR(255),
    EntitlementOwnerSite VARCHAR(255),
    NB_Accounts INT,
    SafeCreationDate DATETIME,
    LastUsedHumanDate DATETIME,
    ImportDate DATETIME,
    Assignee VARCHAR(255),
    Action VARCHAR(255),
    Remediation VARCHAR(255),
    Comments VARCHAR(255),
    NbSafeUsers INT,
    NbSafeUsersWithOwnerRight INT,
    NbSafeUsersWithBreakglassRight INT,
    NbSafeUsersWithDEVRight INT,
    NbSafeUsersWithConsultRight INT,
    UNIQUE KEY (id, SafeName)
);

CREATE TABLE metadata (
    id INT,
    Metier2 VARCHAR(255),
    SafeName VARCHAR(255),
    BAM_ID INT,
    AppName VARCHAR(255),
    Instance VARCHAR(255),
    AppStatus VARCHAR(255),
    EntitlementOwnerUID VARCHAR(255),
    EntitlementOwnerName VARCHAR(255),
    EntitlementOwnerMetier VARCHAR(255),
    EntitlementOwnerSite VARCHAR(255),
    NB_Accounts INT,
    SafeCreationDate DATETIME,
    LastUsedHumanDate DATETIME,
    ImportDate DATETIME,
    Assignee VARCHAR(255),
    Action VARCHAR(255),
    Remediation VARCHAR(255),
    Comments VARCHAR(255),
    NbSafeUsers INT,
    NbSafeUsersWithOwnerRight INT,
    NbSafeUsersWithBreakglassRight INT,
    NbSafeUsersWithDEVRight INT,
    NbSafeUsersWithConsultRight INT,
    latest_import_date DATETIME,
    PRIMARY KEY (SafeName)  -- assumes SafeName is unique
);


CREATE TABLE history (
    sno INT AUTO_INCREMENT PRIMARY KEY,
    report_id INT,
    present_on DATE,
    FOREIGN KEY (report_id) REFERENCES SafeData(id)
);

-- Declare variables
DECLARE done INT DEFAULT 0;
DECLARE v_id INT;
DECLARE v_safename VARCHAR(255);
DECLARE v_import_date DATE;

-- Cursor to loop through SafeData
DECLARE cur CURSOR FOR
  SELECT id, SafeName, ImportDate FROM SafeData;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

-- Open the cursor
OPEN cur;

read_loop: LOOP
  FETCH cur INTO v_id, v_safename, v_import_date;
  IF done THEN
    LEAVE read_loop;
  END IF;

  -- Check if exact (SafeName, id) exists in metadata
  IF NOT EXISTS (
    SELECT 1 FROM metadata WHERE SafeName = v_safename AND id = v_id
  ) THEN
    -- If not, insert this row into metadata
    INSERT INTO metadata (id, SafeName, latest_import_date)
    VALUES (v_id, v_safename, v_import_date);
  
  ELSE
    -- If SafeName already exists, update latest_import_date if newer
    UPDATE metadata
    SET latest_import_date = v_import_date
    WHERE SafeName = v_safename AND latest_import_date < v_import_date;
  END IF;

END LOOP;

-- Close the cursor
CLOSE cur;
